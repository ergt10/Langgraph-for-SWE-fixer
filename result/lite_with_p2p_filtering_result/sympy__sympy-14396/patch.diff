
diff --git a/sympy/polys/polyoptions.py b/sympy/polys/polyoptions.py
index 57c950b..5ed3bb9 100644
--- a/sympy/polys/polyoptions.py
+++ b/sympy/polys/polyoptions.py
@@ -402,15 +402,16 @@ class Domain(with_metaclass(OptionType, Option)):
 
     after = ['gens']
 
-    _re_realfield = re.compile(r"^(R|RR)(_(\d+))?$")
-    _re_complexfield = re.compile(r"^(C|CC)(_(\d+))?$")
+    _re_realfield = re.compile(r"^(R|RR)(_(\d+))?\[?(.+)?\]?")
+    _re_complexfield = re.compile(r"^(C|CC)(_(\d+))?\[?(.+)?\]?")
     _re_finitefield = re.compile(r"^(FF|GF)\((\d+)\)$")
-    _re_polynomial = re.compile(r"^(Z|ZZ|Q|QQ)\[(.+)\]$")
-    _re_fraction = re.compile(r"^(Z|ZZ|Q|QQ)\((.+)\)$")
-    _re_algebraic = re.compile(r"^(Q|QQ)\<(.+)\>$")
+    _re_polynomial = re.compile(r"^(Z|ZZ|Q|QQ)\[(.+)?\]$")
+    _re_fraction = re.compile(r"^(Z|ZZ|Q|QQ)\((.+)?\)$")
+    _re_algebraic = re.compile(r"^(Q|QQ)\<(.+)?\>$")
 
     @classmethod
     def preprocess(cls, domain):
+
         if isinstance(domain, sympy.polys.domains.Domain):
             return domain
         elif hasattr(domain, 'to_domain'):

diff --git a/sympy/polys/polyoptions.py b/sympy/polys/polyoptions.py
index 57c950b..345343e 100644
--- a/sympy/polys/polyoptions.py
+++ b/sympy/polys/polyoptions.py
@@ -480,10 +480,14 @@ class Domain(with_metaclass(OptionType, Option)):
                 gens = list(map(sympify, r.groups()[1].split(',')))
                 return sympy.polys.domains.QQ.algebraic_field(*gens)
 
-        raise OptionError('expected a valid domain specification, got %s' % domain)
+        raise OptionError(
+            'expected a valid domain specification, got %s' % domain +
+            ' (for more information see the docstring for Domain in sympy.polys.domains)'
+        )
 
     @classmethod
     def postprocess(cls, options):
+
         if 'gens' in options and 'domain' in options and options['domain'].is_Composite and \
                 (set(options['domain'].symbols) & set(options['gens'])):
             raise GeneratorsError(
