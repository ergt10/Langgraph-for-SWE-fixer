+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   sympy/sets/sets.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit e727339af6dc22321b00f52d971cda39e4ce89fb
Merge: 6dd3966100 3c5b991bea
Author: Francesco Bonazzi <franz.bonazzi@gmail.com>
Date:   Fri Jun 7 09:45:12 2019 +0200

    Merge pull request #16969 from kangzhiq/Added_functions_to_AC
    
    Added functions to ArrayComprehension

+ git diff e727339af6dc22321b00f52d971cda39e4ce89fb
diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py
index 03cf57a30b..9d22d386b6 100644
--- a/sympy/sets/sets.py
+++ b/sympy/sets/sets.py
@@ -1321,12 +1321,12 @@ def _handle_finite_sets(args):
             binary=True)
         if not fs_args:
             return
-        fs_args.sort(key=len)
         s = fs_args[0]
         fs_args = fs_args[1:]
 
         res = []
         unk = []
+
         for x in s:
             c = fuzzy_and(fuzzy_bool(o.contains(x))
                 for o in fs_args + other)
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.5.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.5.dev0
    Uninstalling sympy-1.5.dev0:
      Successfully uninstalled sympy-1.5.dev0
  Running setup.py develop for sympy
Successfully installed sympy-1.5.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout e727339af6dc22321b00f52d971cda39e4ce89fb sympy/sets/tests/test_sets.py
Updated 0 paths from 3be1a44635
+ git apply -v -
Checking patch sympy/sets/tests/test_sets.py...
Applied patch sympy/sets/tests/test_sets.py cleanly.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose sympy/sets/tests/test_sets.py
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.19-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        1040268
hash randomization: on (PYTHONHASHSEED=2374718876)

sympy/sets/tests/test_sets.py[78] 
test_imageset F
test_interval_arguments ok
test_interval_symbolic_end_points ok
test_union ok
test_union_iter ok
test_difference ok
test_Complement E
test_complement E
test_intersect1 E
test_intersection F
test_issue_9623 ok
test_is_disjoint ok
test_ProductSet_of_single_arg_is_arg ok
test_interval_subs ok
test_interval_to_mpi ok
test_measure ok
test_is_subset ok
test_is_proper_subset ok
test_is_superset ok
test_is_proper_superset ok
test_contains ok
test_interval_symbolic ok
test_union_contains ok
test_is_number ok
test_Interval_is_left_unbounded ok
test_Interval_is_right_unbounded ok
test_Interval_as_relational ok
test_Finite_as_relational ok
test_Union_as_relational ok
test_Intersection_as_relational ok
test_EmptySet ok
test_finite_basic ok
test_powerset ok
test_product_basic ok
test_real E
test_supinf ok
test_universalset ok
test_Union_of_ProductSets_shares ok
test_Interval_free_symbols ok
test_image_interval ok
test_image_piecewise ok
test_image_Intersection f
test_image_FiniteSet ok
test_image_Union ok
test_image_EmptySet ok
test_issue_5724_7680 ok
test_boundary ok
test_boundary_Union ok
test_union_boundary_of_joining_sets f
test_boundary_ProductSet ok
test_boundary_ProductSet_line ok
test_is_open ok
test_is_closed ok
test_closure ok
test_interior ok
test_issue_7841 ok
test_Eq ok
test_SymmetricDifference ok
test_issue_9536 ok
test_issue_9637 E
test_issue_9808 f
test_issue_9956 ok
test_issue_Symbol_inter E
test_issue_11827 ok
test_issue_10113 ok
test_issue_10248 ok
test_issue_9447 ok
test_issue_10337 ok
test_issue_10326 ok
test_issue_2799 ok
test_issue_9706 ok
test_issue_8257 ok
test_issue_10931 ok
test_issue_11174 ok
test_finite_set_intersection E
test_union_intersection_constructor ok
test_Union_contains ok
test_issue_16878b f                                                       [FAIL]


________________________________ slowest tests _________________________________
test_image_interval - Took 34.402 seconds
test_issue_10113 - Took 49.661 seconds
________________________________________________________________________________
________________ sympy/sets/tests/test_sets.py:test_Complement _________________
Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'zero'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'finite'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_real'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'zero'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'integer'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_negative'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 209, in test_Complement
    assert Complement(FiniteSet(x, y, 2), Interval(-10, 10)) == \
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1331, in _handle_finite_sets
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/core/logic.py", line 139, in fuzzy_and
    for ai in args:
  File "/testbed/sympy/sets/sets.py", line 1331, in <genexpr>
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/sets/sets.py", line 315, in contains
    c = self._contains(other)
  File "/testbed/sympy/sets/sets.py", line 1669, in _contains
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/sets/sets.py", line 1669, in <listcomp>
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/core/relational.py", line 445, in __new__
    z = dif.is_zero
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 7 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 841, in _eval_is_positive
    finite = self.is_finite
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 2 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/add.py", line 528, in _eval_is_imaginary
    elif (S.ImaginaryUnit*a).is_extended_real:
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1220, in _eval_is_imaginary
    z = self.is_zero
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1333, in _eval_is_odd
    is_integer = self.is_integer
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 2 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 854, in _eval_is_negative
    extended_negative = self.is_extended_negative
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 1 more time]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1108, in <lambda>
    _eval_is_complex = lambda self: _fuzzy_group(
  File "/testbed/sympy/core/logic.py", line 78, in _fuzzy_group
    for a in args:
  File "/testbed/sympy/core/mul.py", line 1109, in <genexpr>
    (a.is_complex for a in self.args), quick_exit=True)
RecursionError: maximum recursion depth exceeded
________________________________________________________________________________
________________ sympy/sets/tests/test_sets.py:test_complement _________________
Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 247, in test_complement
    assert FiniteSet(0, x).complement(S.Reals) == Complement(Interval(-oo, 0, True, True) +
  File "/testbed/sympy/sets/sets.py", line 168, in complement
    return Complement(universe, self)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1331, in _handle_finite_sets
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/core/logic.py", line 139, in fuzzy_and
    for ai in args:
  File "/testbed/sympy/sets/sets.py", line 1331, in <genexpr>
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/sets/sets.py", line 315, in contains
    c = self._contains(other)
  File "/testbed/sympy/sets/sets.py", line 1669, in _contains
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/sets/sets.py", line 1669, in <listcomp>
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/core/relational.py", line 444, in __new__
    dif = lhs - rhs
  File "/testbed/sympy/core/decorators.py", line 91, in __sympifyit_wrapper
    return func(a, b)
  File "/testbed/sympy/core/decorators.py", line 129, in binary_op_wrapper
    return func(self, other)
  File "/testbed/sympy/core/expr.py", line 182, in __sub__
    return Add(self, -other)
  File "/testbed/sympy/core/operations.py", line 31, in __new__
    args = list(map(_sympify, args))
  File "/testbed/sympy/core/sympify.py", line 422, in _sympify
    return sympify(a, strict=True)
  File "/testbed/sympy/core/sympify.py", line 266, in sympify
    if a in sympy_classes:
  File "/testbed/sympy/core/numbers.py", line 2291, in __hash__
    return hash(self.p)
RecursionError: maximum recursion depth exceeded while calling a Python object
________________________________________________________________________________
________________ sympy/sets/tests/test_sets.py:test_intersect1 _________________
Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'zero'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'finite'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_real'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_negative'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_positive'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 281, in test_intersect1
    assert FiniteSet(1, 2, x).intersect(FiniteSet(x)) == FiniteSet(x)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1331, in _handle_finite_sets
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/core/logic.py", line 139, in fuzzy_and
    for ai in args:
  File "/testbed/sympy/sets/sets.py", line 1331, in <genexpr>
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/sets/sets.py", line 315, in contains
    c = self._contains(other)
  File "/testbed/sympy/sets/sets.py", line 1669, in _contains
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/sets/sets.py", line 1669, in <listcomp>
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/core/relational.py", line 445, in __new__
    z = dif.is_zero
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 4 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 851, in _eval_is_negative
    finite = self.is_finite
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 3 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/add.py", line 528, in _eval_is_imaginary
    elif (S.ImaginaryUnit*a).is_extended_real:
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 4 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 854, in _eval_is_negative
    extended_negative = self.is_extended_negative
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 844, in _eval_is_positive
    extended_positive = self.is_extended_positive
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 1 more time]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1108, in <lambda>
    _eval_is_complex = lambda self: _fuzzy_group(
  File "/testbed/sympy/core/logic.py", line 78, in _fuzzy_group
    for a in args:
  File "/testbed/sympy/core/mul.py", line 1109, in <genexpr>
    (a.is_complex for a in self.args), quick_exit=True)
RecursionError: maximum recursion depth exceeded
________________________________________________________________________________
___________________ sympy/sets/tests/test_sets.py:test_real ____________________
Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'zero'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_negative'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_positive'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_real'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'integer'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'rational'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'finite'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 739, in test_real
    assert not any((a + D).is_subset(S.Reals) for a in [I, J, A, B, C, D])
  File "/testbed/sympy/sets/tests/test_sets.py", line 739, in <genexpr>
    assert not any((a + D).is_subset(S.Reals) for a in [I, J, A, B, C, D])
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1331, in _handle_finite_sets
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/core/logic.py", line 139, in fuzzy_and
    for ai in args:
  File "/testbed/sympy/sets/sets.py", line 1331, in <genexpr>
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/sets/sets.py", line 315, in contains
    c = self._contains(other)
  File "/testbed/sympy/sets/sets.py", line 1669, in _contains
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/sets/sets.py", line 1669, in <listcomp>
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/core/relational.py", line 445, in __new__
    z = dif.is_zero
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 7 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 854, in _eval_is_negative
    extended_negative = self.is_extended_negative
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 844, in _eval_is_positive
    extended_positive = self.is_extended_positive
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/add.py", line 528, in _eval_is_imaginary
    elif (S.ImaginaryUnit*a).is_extended_real:
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1333, in _eval_is_odd
    is_integer = self.is_integer
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1158, in _eval_is_integer
    is_rational = self.is_rational
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 2 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 841, in _eval_is_positive
    finite = self.is_finite
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 301, in _ask
    assumptions._tell(fact, None)
  File "/testbed/sympy/core/facts.py", line 489, in _tell
    if k in self and self[k] is not None:
RecursionError: maximum recursion depth exceeded while calling a Python object
________________________________________________________________________________
________________ sympy/sets/tests/test_sets.py:test_issue_9637 _________________
Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'zero'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'finite'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_real'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'rational'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'finite'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 967, in test_issue_9637
    assert Complement(Interval(1, 3), b) == \
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1331, in _handle_finite_sets
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/core/logic.py", line 139, in fuzzy_and
    for ai in args:
  File "/testbed/sympy/sets/sets.py", line 1331, in <genexpr>
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/sets/sets.py", line 315, in contains
    c = self._contains(other)
  File "/testbed/sympy/sets/sets.py", line 1669, in _contains
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/sets/sets.py", line 1669, in <listcomp>
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/core/relational.py", line 445, in __new__
    z = dif.is_zero
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 841, in _eval_is_positive
    finite = self.is_finite
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 4 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/add.py", line 528, in _eval_is_imaginary
    elif (S.ImaginaryUnit*a).is_extended_real:
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1158, in _eval_is_integer
    is_rational = self.is_rational
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 1 more time]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 851, in _eval_is_negative
    finite = self.is_finite
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 5 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 841, in _eval_is_positive
    finite = self.is_finite
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
RecursionError: maximum recursion depth exceeded while calling a Python object
________________________________________________________________________________
____________ sympy/sets/tests/test_sets.py:test_issue_Symbol_inter _____________
Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'zero'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'extended_real'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'finite'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'integer'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'rational'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
KeyError: 'zero'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 992, in test_issue_Symbol_inter
    assert Intersection(FiniteSet(1, m, n), FiniteSet(m, n, 2), i) == \
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1331, in _handle_finite_sets
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/core/logic.py", line 139, in fuzzy_and
    for ai in args:
  File "/testbed/sympy/sets/sets.py", line 1331, in <genexpr>
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/sets/sets.py", line 315, in contains
    c = self._contains(other)
  File "/testbed/sympy/sets/sets.py", line 1669, in _contains
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/sets/sets.py", line 1669, in <listcomp>
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/core/relational.py", line 445, in __new__
    z = dif.is_zero
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 12 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/add.py", line 528, in _eval_is_imaginary
    elif (S.ImaginaryUnit*a).is_extended_real:
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/expr.py", line 851, in _eval_is_negative
    finite = self.is_finite
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1333, in _eval_is_odd
    is_integer = self.is_integer
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1158, in _eval_is_integer
    is_rational = self.is_rational
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  [Previous line repeated 2 more times]
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1220, in _eval_is_imaginary
    z = self.is_zero
  File "/testbed/sympy/core/assumptions.py", line 266, in getit
    return _ask(fact, self)
  File "/testbed/sympy/core/assumptions.py", line 321, in _ask
    _ask(pk, obj)
  File "/testbed/sympy/core/assumptions.py", line 309, in _ask
    a = evaluate(obj)
  File "/testbed/sympy/core/mul.py", line 1330, in _eval_is_extended_negative
    return self._eval_pos_neg(-1)
  File "/testbed/sympy/core/mul.py", line 1300, in _eval_pos_neg
    if t.is_extended_positive:
  File "/testbed/sympy/core/assumptions.py", line 262, in getit
    return self._assumptions[fact]
RecursionError: maximum recursion depth exceeded while calling a Python object
________________________________________________________________________________
__________ sympy/sets/tests/test_sets.py:test_finite_set_intersection __________
Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 1108, in test_finite_set_intersection
    assert Intersection(FiniteSet(-oo, x), FiniteSet(x)) == FiniteSet(x)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1344, in _handle_finite_sets
    non_symbolic_s = s - FiniteSet(
  File "/testbed/sympy/sets/sets.py", line 595, in __sub__
    return Complement(self, other)
  File "/testbed/sympy/sets/sets.py", line 1416, in __new__
    return Complement.reduce(a, b)
  File "/testbed/sympy/sets/sets.py", line 1426, in reduce
    if B == S.UniversalSet or A.is_subset(B):
  File "/testbed/sympy/sets/sets.py", line 348, in is_subset
    s_o = self.intersect(other)
  File "/testbed/sympy/sets/sets.py", line 119, in intersect
    return Intersection(self, other)
  File "/testbed/sympy/sets/sets.py", line 1268, in __new__
    return simplify_intersection(args)
  File "/testbed/sympy/sets/sets.py", line 1995, in simplify_intersection
    rv = Intersection._handle_finite_sets(args)
  File "/testbed/sympy/sets/sets.py", line 1331, in _handle_finite_sets
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/core/logic.py", line 139, in fuzzy_and
    for ai in args:
  File "/testbed/sympy/sets/sets.py", line 1331, in <genexpr>
    c = fuzzy_and(fuzzy_bool(o.contains(x))
  File "/testbed/sympy/sets/sets.py", line 315, in contains
    c = self._contains(other)
  File "/testbed/sympy/sets/sets.py", line 1669, in _contains
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/sets/sets.py", line 1669, in <listcomp>
    return fuzzy_or([tfn[Eq(e, other, evaluate=True)] for e in self.args])
  File "/testbed/sympy/core/relational.py", line 406, in __new__
    rhs = _sympify(rhs)
  File "/testbed/sympy/core/sympify.py", line 422, in _sympify
    return sympify(a, strict=True)
  File "/testbed/sympy/core/sympify.py", line 266, in sympify
    if a in sympy_classes:
  File "/testbed/sympy/core/numbers.py", line 3127, in __hash__
    return super(NegativeInfinity, self).__hash__()
  File "/testbed/sympy/core/numbers.py", line 810, in __hash__
    return super(Number, self).__hash__()
RecursionError: maximum recursion depth exceeded while calling a Python object

________________________________________________________________________________
_________________ sympy/sets/tests/test_sets.py:test_imageset __________________
Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 24, in test_imageset
    assert (1, r) in imageset(x, (x, x), S.Reals) != False
AssertionError
________________________________________________________________________________
_______________ sympy/sets/tests/test_sets.py:test_intersection ________________
Traceback (most recent call last):
  File "/testbed/sympy/sets/tests/test_sets.py", line 346, in test_intersection
    assert Intersection({1}, {1}, {x}) == Intersection({1}, {x})
AssertionError

 tests finished: 65 passed, 2 failed, 4 expected to fail, 7 exceptions, 
in 94.78 seconds 
DO *NOT* COMMIT!
+ git checkout e727339af6dc22321b00f52d971cda39e4ce89fb sympy/sets/tests/test_sets.py
Updated 1 path from 3be1a44635
