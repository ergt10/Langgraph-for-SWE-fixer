
diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 067f431..c19ca91 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -4,10 +4,12 @@ import datetime
 import decimal
 import operator
 import uuid
+import inspect
 import warnings
 from base64 import b64decode, b64encode
 from functools import partialmethod, total_ordering
 
+
 from django import forms
 from django.apps import apps
 from django.conf import settings

diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 067f431..05d9aa0 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -1017,9 +1017,22 @@ class Field(RegisterLookupMixin):
     def _get_default(self):
         if self.has_default():
             if callable(self.default):
+                if inspect.ismethod(self.default):
+                    # Methods need to have their qualified name adjusted to
+                    # include the class they are defined on.
+                    outer_class = self.default.__self__
+                    if (
+                        outer_class is not self.model
+                        and outer_class.__name__ != self.model.__name__
+                    ):
+                        self.default.__qualname__ = (
+                            f"{outer_class.__name__}.{self.default.__qualname__}"
+                        )
                 return self.default
             return lambda: self.default
 
+
+
         if self.db_default is not NOT_PROVIDED:
             from django.db.models.expressions import DatabaseDefault
 
