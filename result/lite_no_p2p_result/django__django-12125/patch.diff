
diff --git a/django/db/models/base.py b/django/db/models/base.py
index a315aef..5876ac8 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -64,11 +64,6 @@ def subclass_exception(name, bases, module, attached_to):
     })
 
 
-def _has_contribute_to_class(value):
-    # Only call contribute_to_class() if it's bound.
-    return not inspect.isclass(value) and hasattr(value, 'contribute_to_class')
-
-
 class ModelBase(type):
     """Metaclass for all models."""
     def __new__(cls, name, bases, attrs, **kwargs):
@@ -97,11 +92,13 @@ class ModelBase(type):
             else:
                 new_attrs[obj_name] = obj
         new_class = super_new(cls, name, bases, new_attrs, **kwargs)
+        new_class.__qualname__ = attrs['__qualname__']
 
         abstract = getattr(attr_meta, 'abstract', False)
         meta = attr_meta or getattr(new_class, 'Meta', None)
         base_meta = getattr(new_class, '_meta', None)
 
+
         app_label = None
 
         # Look for an application configuration to attach the model to.
