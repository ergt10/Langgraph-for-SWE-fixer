
diff --git a/sklearn/mixture/gaussian_mixture.py b/sklearn/mixture/gaussian_mixture.py
index 3b357df..12f9ec6 100644
--- a/sklearn/mixture/gaussian_mixture.py
+++ b/sklearn/mixture/gaussian_mixture.py
@@ -752,4 +752,38 @@ class GaussianMixture(BaseMixture):
         aic : float
             The lower the better.
         """
-        return -2 * self.score(X) * X.shape[0] + 2 * self._n_parameters()
+        return -2 * self.score(X) * X.shape[0] + 2 * self._n_parameters()
+
+    def fit_predict(self, X, y=None):
+        """Fit the model and predict labels for samples.
+
+        Parameters
+        ----------
+        X : array-like, shape (n_samples, n_features)
+            List of n_features-dimensional data points. Each row
+            corresponds to a single data point.
+
+        Returns
+        -------
+        labels : array, shape (n_samples,)
+            Component labels.
+        """
+        if self.n_init == 1:
+            self.fit(X)
+            return self.predict(X)
+
+        best_params = None
+        lowest_bic = np.infty
+
+        # n_init > 1: we need to fit the best model and predict its labels
+        for _ in range(self.n_init):
+            self.fit(X)
+            bic = self.bic(X)
+            if bic < lowest_bic:
+                lowest_bic = bic
+                best_params = self._get_parameters()
+                best_n_iter = self.n_iter_
+
+        self._set_parameters(best_params)
+        self.n_iter_ = best_n_iter
+        return self.predict(X)
