+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django/core/handlers/base.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 429d089d0a8fbd400e0c010708df4f0d16218970
Author: Jon Dufresne <jon.dufresne@gmail.com>
Date:   Wed Dec 23 07:20:40 2020 -0800

    Refs #30367 -- Changed remaining "pip install" to "python -m pip install" in docs.

diff --git a/docs/internals/contributing/writing-code/coding-style.txt b/docs/internals/contributing/writing-code/coding-style.txt
index 739ff0f4b9..66cbb2f8bb 100644
--- a/docs/internals/contributing/writing-code/coding-style.txt
+++ b/docs/internals/contributing/writing-code/coding-style.txt
@@ -19,7 +19,7 @@ To use the tool, first install ``pre-commit`` and then the git hooks::
 
 .. console::
 
-    $ pip install pre-commit
+    $ python -m pip install pre-commit
     $ pre-commit install
 
 On the first commit ``pre-commit`` will install the hooks, these are
diff --git a/docs/ref/contrib/gis/install/index.txt b/docs/ref/contrib/gis/install/index.txt
index 2a39cb9137..687fe5d59d 100644
--- a/docs/ref/contrib/gis/install/index.txt
+++ b/docs/ref/contrib/gis/install/index.txt
@@ -494,7 +494,7 @@ The ``psycopg2`` Python module provides the interface between Python and the
 PostgreSQL database. ``psycopg2`` can be installed via pip within your Python
 virtual environment::
 
-    pip install psycopg2
+    ...\> py -m pip install psycopg2
 
 .. rubric:: Footnotes
 .. [#] GeoDjango uses the :func:`~ctypes.util.find_library` routine from
+ git diff 429d089d0a8fbd400e0c010708df4f0d16218970
diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py
index 8e8c3da06a..07cf66374e 100644
--- a/django/core/handlers/base.py
+++ b/django/core/handlers/base.py
@@ -55,10 +55,10 @@ class BaseHandler:
                     middleware_is_async, handler, handler_is_async,
                     debug=settings.DEBUG, name='middleware %s' % middleware_path,
                 )
-                mw_instance = middleware(handler)
             except MiddlewareNotUsed as exc:
                 if settings.DEBUG:
                     if str(exc):
+
                         logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)
                     else:
                         logger.debug('MiddlewareNotUsed: %r', middleware_path)
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: asgiref>=3.2.10 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (3.4.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (2024.1)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (0.4.4)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2.10->Django==3.2) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.2
    Uninstalling Django-3.2:
      Successfully uninstalled Django-3.2
  Running setup.py develop for Django
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Successfully installed Django-3.2
+ git checkout 429d089d0a8fbd400e0c010708df4f0d16218970 tests/middleware_exceptions/tests.py
Updated 0 paths from 3877bbf2e4
+ git apply -v -
Checking patch tests/middleware_exceptions/tests.py...
Applied patch tests/middleware_exceptions/tests.py cleanly.
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 middleware_exceptions.tests
test_exception_in_async_render_passed_to_process_exception (middleware_exceptions.tests.AsyncMiddlewareTests) ... ERROR
test_exception_in_render_passed_to_process_exception (middleware_exceptions.tests.AsyncMiddlewareTests) ... Testing against Django installed in '/testbed/django'
Importing application middleware_exceptions
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
ERROR
test_process_template_response (middleware_exceptions.tests.AsyncMiddlewareTests) ... ERROR
test_process_template_response_returns_none (middleware_exceptions.tests.AsyncMiddlewareTests) ... ERROR
test_process_view_return_response (middleware_exceptions.tests.AsyncMiddlewareTests) ... ERROR
test_view_exception_handled_by_process_exception (middleware_exceptions.tests.AsyncMiddlewareTests) ... ERROR
test_async_and_sync_middleware_chain_async_call (middleware_exceptions.tests.MiddlewareNotUsedTests) ... ERROR
test_do_not_log_when_debug_is_false (middleware_exceptions.tests.MiddlewareNotUsedTests) ... ERROR
test_log (middleware_exceptions.tests.MiddlewareNotUsedTests) ... ERROR
test_log_custom_message (middleware_exceptions.tests.MiddlewareNotUsedTests) ... ERROR
test_raise_exception (middleware_exceptions.tests.MiddlewareNotUsedTests) ... ok
test_async_and_sync_middleware_async_call (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ERROR
test_async_and_sync_middleware_sync_call (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ERROR
test_async_middleware (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ERROR
test_async_middleware_async (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ERROR
test_async_process_template_response_returns_none_with_sync_client (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ERROR
test_not_sync_or_async_middleware (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ok
test_sync_decorated_middleware (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ERROR
test_sync_middleware (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ERROR
test_sync_middleware_async (middleware_exceptions.tests.MiddlewareSyncAsyncTests) ... ERROR
test_exception_in_middleware_converted_before_prior_middleware (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_exception_in_render_passed_to_process_exception (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_process_template_response (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_process_template_response_returns_none (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_process_view_return_none (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_process_view_return_response (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_response_from_process_exception_short_circuits_remainder (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_response_from_process_exception_when_return_response (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_templateresponse_from_process_view_passed_to_process_template_response (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_templateresponse_from_process_view_rendered (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_view_exception_converted_before_middleware (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_view_exception_handled_by_process_exception (middleware_exceptions.tests.MiddlewareTests) ... ERROR
test_missing_root_urlconf (middleware_exceptions.tests.RootUrlconfTests) ... ERROR

======================================================================
ERROR: test_exception_in_async_render_passed_to_process_exception (middleware_exceptions.tests.AsyncMiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 344, in test_exception_in_async_render_passed_to_process_exception
    '/middleware_exceptions/async_exception_in_render/'
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_exception_in_render_passed_to_process_exception (middleware_exceptions.tests.AsyncMiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 335, in test_exception_in_render_passed_to_process_exception
    '/middleware_exceptions/exception_in_render/'
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_process_template_response (middleware_exceptions.tests.AsyncMiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 312, in test_process_template_response
    '/middleware_exceptions/template_response/'
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_process_template_response_returns_none (middleware_exceptions.tests.AsyncMiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 328, in test_process_template_response_returns_none
    await self.async_client.get('/middleware_exceptions/template_response/')
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_process_view_return_response (middleware_exceptions.tests.AsyncMiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 359, in test_process_view_return_response
    response = await self.async_client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_view_exception_handled_by_process_exception (middleware_exceptions.tests.AsyncMiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 352, in test_view_exception_handled_by_process_exception
    response = await self.async_client.get('/middleware_exceptions/error/')
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_async_and_sync_middleware_chain_async_call (middleware_exceptions.tests.MiddlewareNotUsedTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 190, in test_async_and_sync_middleware_chain_async_call
    response = await self.async_client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_do_not_log_when_debug_is_false (middleware_exceptions.tests.MiddlewareNotUsedTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 182, in test_do_not_log_when_debug_is_false
    self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_log (middleware_exceptions.tests.MiddlewareNotUsedTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 160, in test_log
    self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_log_custom_message (middleware_exceptions.tests.MiddlewareNotUsedTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 169, in test_log_custom_message
    self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_async_and_sync_middleware_async_call (middleware_exceptions.tests.MiddlewareSyncAsyncTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 292, in test_async_and_sync_middleware_async_call
    response = await self.async_client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_async_and_sync_middleware_sync_call (middleware_exceptions.tests.MiddlewareSyncAsyncTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 300, in test_async_and_sync_middleware_sync_call
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_async_middleware (middleware_exceptions.tests.MiddlewareSyncAsyncTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 228, in test_async_middleware
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_async_middleware_async (middleware_exceptions.tests.MiddlewareSyncAsyncTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 267, in test_async_middleware_async
    response = await self.async_client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_async_process_template_response_returns_none_with_sync_client (middleware_exceptions.tests.MiddlewareSyncAsyncTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 286, in test_async_process_template_response_returns_none_with_sync_client
    self.client.get('/middleware_exceptions/template_response/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_sync_decorated_middleware (middleware_exceptions.tests.MiddlewareSyncAsyncTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 220, in test_sync_decorated_middleware
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_sync_middleware (middleware_exceptions.tests.MiddlewareSyncAsyncTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 213, in test_sync_middleware
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_sync_middleware_async (middleware_exceptions.tests.MiddlewareSyncAsyncTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 375, in inner
    return await func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 254, in test_sync_middleware_async
    response = await self.async_client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 903, in request
    response = await self.handler(scope)
  File "/testbed/django/test/client.py", line 176, in __call__
    self.load_middleware(is_async=True)
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_exception_in_middleware_converted_before_prior_middleware (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 103, in test_exception_in_middleware_converted_before_prior_middleware
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_exception_in_render_passed_to_process_exception (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 109, in test_exception_in_render_passed_to_process_exception
    response = self.client.get('/middleware_exceptions/exception_in_render/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_process_template_response (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 57, in test_process_template_response
    response = self.client.get('/middleware_exceptions/template_response/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_process_template_response_returns_none (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 67, in test_process_template_response_returns_none
    self.client.get('/middleware_exceptions/template_response/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_process_view_return_none (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 16, in test_process_view_return_none
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_process_view_return_response (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 22, in test_process_view_return_response
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_response_from_process_exception_short_circuits_remainder (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 85, in test_response_from_process_exception_short_circuits_remainder
    response = self.client.get('/middleware_exceptions/error/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_response_from_process_exception_when_return_response (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 94, in test_response_from_process_exception_when_return_response
    response = self.client.get('/middleware_exceptions/error/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_templateresponse_from_process_view_passed_to_process_template_response (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 47, in test_templateresponse_from_process_view_passed_to_process_template_response
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_templateresponse_from_process_view_rendered (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 35, in test_templateresponse_from_process_view_rendered
    response = self.client.get('/middleware_exceptions/view/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_view_exception_converted_before_middleware (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 71, in test_view_exception_converted_before_middleware
    response = self.client.get('/middleware_exceptions/permission_denied/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_view_exception_handled_by_process_exception (middleware_exceptions.tests.MiddlewareTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 77, in test_view_exception_handled_by_process_exception
    response = self.client.get('/middleware_exceptions/error/')
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

======================================================================
ERROR: test_missing_root_urlconf (middleware_exceptions.tests.RootUrlconfTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 382, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware_exceptions/tests.py", line 122, in test_missing_root_urlconf
    self.client.get("/middleware_exceptions/view/")
  File "/testbed/django/test/client.py", line 742, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 398, in get
    **extra,
  File "/testbed/django/test/client.py", line 473, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 714, in request
    response = self.handler(environ)
  File "/testbed/django/test/client.py", line 132, in __call__
    self.load_middleware()
  File "/testbed/django/core/handlers/base.py", line 67, in load_middleware
    if mw_instance is None:
NameError: name 'mw_instance' is not defined

----------------------------------------------------------------------
Ran 33 tests in 0.035s

FAILED (errors=31)
+ git checkout 429d089d0a8fbd400e0c010708df4f0d16218970 tests/middleware_exceptions/tests.py
Updated 1 path from 3877bbf2e4
