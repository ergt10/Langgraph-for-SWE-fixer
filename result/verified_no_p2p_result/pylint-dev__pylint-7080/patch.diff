
diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py
index 440e6fe..a4723dc 100644
--- a/pylint/lint/pylinter.py
+++ b/pylint/lint/pylinter.py
@@ -582,9 +582,15 @@ class PyLinter(
             if not msg.may_be_emitted():
                 self._msgs_state[msg.msgid] = False
 
+    def _should_ignore_path(self, path: str) -> bool:
+        """Check if a path should be ignored based on ignore_paths config."""
+        return any(path.startswith(ignore_path) for ignore_path in self.config.ignore_paths)
+
     def _discover_files(self, files_or_modules: Sequence[str]) -> Iterator[str]:
         """Discover python modules and packages in sub-directory.
 
+
+
         Returns iterator of paths to discovered modules and packages.
         """
         for something in files_or_modules:

diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py
index 440e6fe..6784da2 100644
--- a/pylint/lint/pylinter.py
+++ b/pylint/lint/pylinter.py
@@ -597,15 +597,12 @@ class PyLinter(
                         # Skip subtree of already discovered package.
                         continue
 
-                    if _is_ignored_file(
-                        root,
-                        self.config.ignore,
-                        self.config.ignore_patterns,
-                        self.config.ignore_paths,
-                    ):
+                    if self._should_ignore_path(root):
                         skip_subtrees.append(root)
                         continue
 
+
+
                     if "__init__.py" in files:
                         skip_subtrees.append(root)
                         yield root
