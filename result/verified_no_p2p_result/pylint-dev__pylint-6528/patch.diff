
diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py
index 6763a6f..9c4cd7e 100644
--- a/pylint/lint/pylinter.py
+++ b/pylint/lint/pylinter.py
@@ -570,9 +570,21 @@ class PyLinter(
 
         Returns iterator of paths to discovered modules and packages.
         """
+
+        def _should_check_file(path: str) -> bool:
+            """Returns whether a module should be checked."""
+            if self.config.from_stdin:
+                return True
+            return self.should_analyze_file(
+                os.path.splitext(os.path.basename(path))[0],
+                path,
+                is_argument=path in files_or_modules,
+            )
+
         for something in files_or_modules:
             if os.path.isdir(something) and not os.path.isfile(
                 os.path.join(something, "__init__.py")
+
             ):
                 skip_subtrees: list[str] = []
                 for root, _, files in os.walk(something):

diff --git a/pylint/lint/pylinter.py b/pylint/lint/pylinter.py
index 6763a6f..374099d 100644
--- a/pylint/lint/pylinter.py
+++ b/pylint/lint/pylinter.py
@@ -587,13 +587,16 @@ class PyLinter(
                             os.path.join(root, file)
                             for file in files
                             if file.endswith(".py")
+                            and _should_check_file(os.path.join(root, file))
                         )
             else:
-                yield something
+                if _should_check_file(something):
+                    yield something
 
     def check(self, files_or_modules: Sequence[str] | str) -> None:
         """Main checking entry: check a list of files or modules from their name.
 
+
         files_or_modules is either a string or list of strings presenting modules to check.
         """
         self.initialize()
