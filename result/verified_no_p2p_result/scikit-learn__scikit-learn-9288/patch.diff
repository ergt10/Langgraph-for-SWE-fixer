
diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py
index 915d041..d050ebc 100644
--- a/sklearn/cluster/k_means_.py
+++ b/sklearn/cluster/k_means_.py
@@ -76,10 +76,13 @@ def _k_init(X, n_clusters, x_squared_norms, random_state, n_local_trials=None):
     """
     n_samples, n_features = X.shape
 
+    if random_state is None:
+        random_state = check_random_state(random_state)
     centers = np.empty((n_clusters, n_features), dtype=X.dtype)
 
     assert x_squared_norms is not None, 'x_squared_norms None in _k_init'
 
+
     # Set the number of local seeding trials if none is given
     if n_local_trials is None:
         # This is what Arthur/Vassilvitskii tried, but did not report

diff --git a/sklearn/cluster/k_means_.py b/sklearn/cluster/k_means_.py
index 915d041..a83206c 100644
--- a/sklearn/cluster/k_means_.py
+++ b/sklearn/cluster/k_means_.py
@@ -714,10 +714,12 @@ def _init_centroids(X, k, init, random_state=None, x_squared_norms=None,
     -------
     centers : array, shape(k, n_features)
     """
-    random_state = check_random_state(random_state)
+    if random_state is None:
+        random_state = check_random_state(random_state)
     n_samples = X.shape[0]
 
     if x_squared_norms is None:
+
         x_squared_norms = row_norms(X, squared=True)
 
     if init_size is not None and init_size < n_samples:
