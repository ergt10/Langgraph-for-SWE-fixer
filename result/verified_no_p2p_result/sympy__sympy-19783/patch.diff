
diff --git a/sympy/physics/quantum/dagger.py b/sympy/physics/quantum/dagger.py
index 0107229..f1c85aa 100644
--- a/sympy/physics/quantum/dagger.py
+++ b/sympy/physics/quantum/dagger.py
@@ -3,9 +3,12 @@
 from __future__ import print_function, division
 
 from sympy.core import Expr
+from sympy.physics.quantum.commutator import Commutator
+from sympy.physics.quantum.operator import IdentityOperator
 from sympy.functions.elementary.complexes import adjoint
 
 __all__ = [
+
     'Dagger'
 ]
 

diff --git a/sympy/physics/quantum/dagger.py b/sympy/physics/quantum/dagger.py
index 0107229..195887b 100644
--- a/sympy/physics/quantum/dagger.py
+++ b/sympy/physics/quantum/dagger.py
@@ -85,5 +85,17 @@ class Dagger(adjoint):
             return obj
         return Expr.__new__(cls, arg)
 
+    def _eval_power(self, other):
+        return Dagger(self.args[0]**other)
+
+    def _eval_mul(self, other):
+        if isinstance(other, IdentityOperator):
+            return self
+        return Expr.__mul__(self, other)
+
+    def _eval_commutator(self, other, **hints):
+        return Commutator(Dagger(self.args[0]), other)
+
+
 adjoint.__name__ = "Dagger"
-adjoint._sympyrepr = lambda a, b: "Dagger(%s)" % b._print(a.args[0])
+adjoint._sympyrepr = lambda a, b: "Dagger(%s)" % b._print(a.args[0])
