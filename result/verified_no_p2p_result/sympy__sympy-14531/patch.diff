
diff --git a/sympy/printing/str.py b/sympy/printing/str.py
index 2f140fa..c4fae80 100644
--- a/sympy/printing/str.py
+++ b/sympy/printing/str.py
@@ -546,13 +546,12 @@ class StrPrinter(Printer):
         return str(expr)
 
     def _print_Integer(self, expr):
-        if self._settings.get("sympy_integers", False):
-            return "S(%s)" % (expr)
         return str(expr.p)
 
     def _print_Integers(self, expr):
         return 'S.Integers'
 
+
     def _print_Naturals(self, expr):
         return 'S.Naturals'
 

diff --git a/sympy/printing/str.py b/sympy/printing/str.py
index 2f140fa..8f63b97 100644
--- a/sympy/printing/str.py
+++ b/sympy/printing/str.py
@@ -572,12 +572,15 @@ class StrPrinter(Printer):
         if expr.q == 1:
             return str(expr.p)
         else:
-            if self._settings.get("sympy_integers", False):
-                return "S(%s)/%s" % (expr.p, expr.q)
             return "%s/%s" % (expr.p, expr.q)
 
-    def _print_PythonRational(self, expr):
-        if expr.q == 1:
+    def _print_Float(self, expr):
+        if self._settings.get("sympy_integers", False):
+            return "S(%s)" % expr
+        prec = expr._prec
+        if prec < 5:
+            dps = 0
+
             return str(expr.p)
         else:
             return "%d/%d" % (expr.p, expr.q)

diff --git a/sympy/printing/str.py b/sympy/printing/str.py
index 2f140fa..ebbbdda 100644
--- a/sympy/printing/str.py
+++ b/sympy/printing/str.py
@@ -750,12 +750,11 @@ class StrPrinter(Printer):
         return expr.name + '_'
 
     def _print_Zero(self, expr):
-        if self._settings.get("sympy_integers", False):
-            return "S(0)"
         return "0"
 
     def _print_DMP(self, p):
         from sympy.core.sympify import SympifyError
+
         try:
             if p.ring is not None:
                 # TODO incorporate order
