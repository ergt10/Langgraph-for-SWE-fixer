
diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py
index 9234395..eb11efa 100644
--- a/src/_pytest/logging.py
+++ b/src/_pytest/logging.py
@@ -396,10 +396,11 @@ class LogCaptureFixture:
 
         .. versionadded:: 3.4
         """
-        return self._item.stash[caplog_records_key].get(when, [])
+        return self._item.stash[caplog_records_key].get(when, []).copy()
 
     @property
     def text(self) -> str:
+
         """The formatted log text."""
         return _remove_ansi_escape_sequences(self.handler.stream.getvalue())
 

diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py
index 9234395..a6510c7 100644
--- a/src/_pytest/logging.py
+++ b/src/_pytest/logging.py
@@ -440,11 +440,13 @@ class LogCaptureFixture:
 
     def clear(self) -> None:
         """Reset the list of log records and the captured log text."""
-        self.handler.reset()
+        self.handler.records.clear()
+        self.handler.stream = StringIO()
 
     def set_level(self, level: Union[int, str], logger: Optional[str] = None) -> None:
         """Set the level of a logger for the duration of a test.
 
+
         .. versionchanged:: 3.4
             The levels of the loggers changed by this function will be
             restored to their initial values at the end of the test.

diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py
index 9234395..9b86061 100644
--- a/src/_pytest/logging.py
+++ b/src/_pytest/logging.py
@@ -694,11 +694,12 @@ class LoggingPlugin:
             self.report_handler,
             level=self.log_level,
         ) as report_handler:
-            caplog_handler.reset()
-            report_handler.reset()
+            caplog_handler.records.clear()
+            report_handler.records.clear()
             item.stash[caplog_records_key][when] = caplog_handler.records
             item.stash[caplog_handler_key] = caplog_handler
 
+
             yield
 
             log = report_handler.stream.getvalue().strip()
