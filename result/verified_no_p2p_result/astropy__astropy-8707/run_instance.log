2025-05-06 06:22:33,680 - INFO - Environment image sweb.env.x86_64.428468730904ff6b4232aa:latest found for astropy__astropy-8707
Building instance image sweb.eval.x86_64.astropy__astropy-8707:latest for astropy__astropy-8707
2025-05-06 06:22:33,684 - INFO - Image sweb.eval.x86_64.astropy__astropy-8707:latest already exists, skipping build.
2025-05-06 06:22:33,684 - INFO - Creating container for astropy__astropy-8707...
2025-05-06 06:22:33,714 - INFO - Container for astropy__astropy-8707 created: 8c4077d53114ef9d03c2ff73a62da2eb2a5aac6d05c9b6b743200f3663fbad7a
2025-05-06 06:22:33,982 - INFO - Container for astropy__astropy-8707 started: 8c4077d53114ef9d03c2ff73a62da2eb2a5aac6d05c9b6b743200f3663fbad7a
2025-05-06 06:22:33,982 - INFO - Intermediate patch for astropy__astropy-8707 written to logs/run_evaluation/20250506_061805/SWE-Fixer/astropy__astropy-8707/patch.diff, now applying to container...
2025-05-06 06:22:34,241 - INFO - Failed to apply patch to container, trying again...
2025-05-06 06:22:34,311 - INFO - >>>>> Applied Patch:
patching file astropy/io/fits/header.py
patching file astropy/io/fits/header.py
Hunk #1 succeeded at 350 (offset 1 line).
Hunk #2 succeeded at 399 (offset 1 line).

2025-05-06 06:22:34,750 - INFO - Git diff before:
diff --git a/astropy/io/fits/header.py b/astropy/io/fits/header.py
index ad07e6d52d..6c9566fee1 100644
--- a/astropy/io/fits/header.py
+++ b/astropy/io/fits/header.py
@@ -334,11 +334,12 @@ class Header:
 
         Parameters
         ----------
-        data : str
-           String containing the entire header.
+        data : str or bytes
+           String or bytes containing the entire header.
 
         sep : str, optional
             The string separating cards from each other, such as a newline.  By
+
             default there is no card separator (as is the case in a raw FITS
             file).
 
@@ -349,6 +350,8 @@ class Header:
         """
 
         cards = []
+        if isinstance(data, bytes):
+            data = data.decode('ascii')
 
         # If the card separator contains characters that may validly appear in
         # a card, the only way to unambiguously distinguish between cards is to
@@ -396,6 +399,8 @@ class Header:
 
         return cls._fromcards(cards)
 
+
+
     @classmethod
     def fromfile(cls, fileobj, sep='', endcard=True, padding=True):
         """
2025-05-06 06:22:34,751 - INFO - Eval script for astropy__astropy-8707 written to logs/run_evaluation/20250506_061805/SWE-Fixer/astropy__astropy-8707/eval.sh; copying to container...
2025-05-06 06:23:05,554 - INFO - Test runtime: 30.60 seconds
2025-05-06 06:23:05,556 - INFO - Test output for astropy__astropy-8707 written to logs/run_evaluation/20250506_061805/SWE-Fixer/astropy__astropy-8707/test_output.txt
2025-05-06 06:23:05,626 - INFO - Git diff after:
diff --git a/astropy/io/fits/header.py b/astropy/io/fits/header.py
index ad07e6d52d..6c9566fee1 100644
--- a/astropy/io/fits/header.py
+++ b/astropy/io/fits/header.py
@@ -334,11 +334,12 @@ class Header:
 
         Parameters
         ----------
-        data : str
-           String containing the entire header.
+        data : str or bytes
+           String or bytes containing the entire header.
 
         sep : str, optional
             The string separating cards from each other, such as a newline.  By
+
             default there is no card separator (as is the case in a raw FITS
             file).
 
@@ -349,6 +350,8 @@ class Header:
         """
 
         cards = []
+        if isinstance(data, bytes):
+            data = data.decode('ascii')
 
         # If the card separator contains characters that may validly appear in
         # a card, the only way to unambiguously distinguish between cards is to
@@ -396,6 +399,8 @@ class Header:
 
         return cls._fromcards(cards)
 
+
+
     @classmethod
     def fromfile(cls, fileobj, sep='', endcard=True, padding=True):
         """
2025-05-06 06:23:05,626 - INFO - Grading answer for astropy__astropy-8707...
2025-05-06 06:23:05,746 - INFO - report: {'astropy__astropy-8707': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['astropy/io/fits/tests/test_header.py::TestHeaderFunctions::test_card_from_bytes']}, 'PASS_TO_PASS': {'success': ['astropy/io/fits/tests/test_header.py::test_shallow_copy', 'astropy/io/fits/tests/test_header.py::test_init_with_header', 'astropy/io/fits/tests/test_header.py::test_init_with_dict', 'astropy/io/fits/tests/test_header.py::test_init_with_ordereddict'], 'failure': ['astropy/io/fits/tests/test_header.py::TestHeaderFunctions::test_rename_keyword', 'astropy/io/fits/tests/test_header.py::TestHeaderFunctions::test_card_constructor_default_args', 'astropy/io/fits/tests/test_header.py::TestHeaderFunctions::test_string_value_card', 'astropy/io/fits/tests/test_header.py::TestHeaderFunctions::test_boolean_value_card', 'astropy/io/fits/tests/test_header.py::TestHeaderFunctions::test_long_integer_value_card', 'astropy/io/fits/tests/test_header.py::TestHeaderFunctions::test_floating_point_value_card', 'astropy/io/fits/tests/test_header.py::TestHeaderFunctions::test_complex_value_card']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for astropy__astropy-8707: resolved: False
2025-05-06 06:23:05,747 - INFO - Attempting to stop container sweb.eval.astropy__astropy-8707.20250506_061805...
2025-05-06 06:23:21,036 - INFO - Attempting to remove container sweb.eval.astropy__astropy-8707.20250506_061805...
2025-05-06 06:23:21,058 - INFO - Container sweb.eval.astropy__astropy-8707.20250506_061805 removed.
