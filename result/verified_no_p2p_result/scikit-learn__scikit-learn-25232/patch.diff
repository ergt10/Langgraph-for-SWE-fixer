
diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py
index 62cdd57..9db0177 100644
--- a/sklearn/impute/_iterative.py
+++ b/sklearn/impute/_iterative.py
@@ -117,10 +117,17 @@ class IterativeImputer(_BaseImputer):
         Which strategy to use to initialize the missing values. Same as the
         `strategy` parameter in :class:`~sklearn.impute.SimpleImputer`.
 
+    fill_value : numeric or array-like, default=0
+        When `initial_strategy == "constant"`, `fill_value` is used to replace
+        all occurrences of missing_values.
+        If left to the default, `fill_value` will be 0 when imputing numerical
+        data and "missing_value" for strings or object data types.
+
     imputation_order : {'ascending', 'descending', 'roman', 'arabic', \
             'random'}, default='ascending'
         The order in which the features will be imputed. Possible values:
 
+
         - `'ascending'`: From features with fewest missing values to most.
         - `'descending'`: From features with most missing values to fewest.
         - `'roman'`: Left to right.

diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py
index 62cdd57..6bdd1c4 100644
--- a/sklearn/impute/_iterative.py
+++ b/sklearn/impute/_iterative.py
@@ -281,9 +281,11 @@ class IterativeImputer(_BaseImputer):
         "initial_strategy": [
             StrOptions({"mean", "median", "most_frequent", "constant"})
         ],
+        "fill_value": ["null", "numeric", "array-like"],
         "imputation_order": [
             StrOptions({"ascending", "descending", "roman", "arabic", "random"})
         ],
+
         "skip_complete": ["boolean"],
         "min_value": [None, Interval(Real, None, None, closed="both"), "array-like"],
         "max_value": [None, Interval(Real, None, None, closed="both"), "array-like"],

diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py
index 62cdd57..871f89e 100644
--- a/sklearn/impute/_iterative.py
+++ b/sklearn/impute/_iterative.py
@@ -301,9 +301,11 @@ class IterativeImputer(_BaseImputer):
         tol=1e-3,
         n_nearest_features=None,
         initial_strategy="mean",
+        fill_value=0,
         imputation_order="ascending",
         skip_complete=False,
         min_value=-np.inf,
+
         max_value=np.inf,
         verbose=0,
         random_state=None,

diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py
index 62cdd57..af41105 100644
--- a/sklearn/impute/_iterative.py
+++ b/sklearn/impute/_iterative.py
@@ -322,9 +322,11 @@ class IterativeImputer(_BaseImputer):
         self.tol = tol
         self.n_nearest_features = n_nearest_features
         self.initial_strategy = initial_strategy
+        self.fill_value = fill_value
         self.imputation_order = imputation_order
         self.skip_complete = skip_complete
         self.min_value = min_value
+
         self.max_value = max_value
         self.verbose = verbose
         self.random_state = random_state

diff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py
index 62cdd57..0971119 100644
--- a/sklearn/impute/_iterative.py
+++ b/sklearn/impute/_iterative.py
@@ -613,9 +613,11 @@ class IterativeImputer(_BaseImputer):
             self.initial_imputer_ = SimpleImputer(
                 missing_values=self.missing_values,
                 strategy=self.initial_strategy,
+                fill_value=self.fill_value,
                 keep_empty_features=self.keep_empty_features,
             )
             X_filled = self.initial_imputer_.fit_transform(X)
+
         else:
             X_filled = self.initial_imputer_.transform(X)
 
