
diff --git a/sympy/combinatorics/perm_groups.py b/sympy/combinatorics/perm_groups.py
index eb05c35..88fe455 100644
--- a/sympy/combinatorics/perm_groups.py
+++ b/sympy/combinatorics/perm_groups.py
@@ -2198,10 +2198,11 @@ class PermutationGroup(Basic):
                 for i, r in enumerate(rep_blocks):
                     if len(r) > len(rep) and rep.issubset(r):
                         # i-th block system is not minimal
-                        del num_blocks[i], blocks[i]
                         to_remove.append(rep_blocks[i])
+                        to_remove_idx.append(i)
                     elif len(r) < len(rep) and r.issubset(rep):
                         # the system being checked is not minimal
+
                         minimal = False
                         break
                 # remove non-minimal representative blocks

diff --git a/sympy/combinatorics/perm_groups.py b/sympy/combinatorics/perm_groups.py
index eb05c35..9a0c8e5 100644
--- a/sympy/combinatorics/perm_groups.py
+++ b/sympy/combinatorics/perm_groups.py
@@ -2206,9 +2206,12 @@ class PermutationGroup(Basic):
                         break
                 # remove non-minimal representative blocks
                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
+                for i in reversed(to_remove_idx):
+                    del num_blocks[i], blocks[i]
 
                 if minimal and num_block not in num_blocks:
                     blocks.append(block)
+
                     num_blocks.append(num_block)
                     rep_blocks.append(rep)
         return blocks
