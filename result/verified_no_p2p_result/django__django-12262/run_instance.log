2025-05-06 06:26:58,331 - INFO - Environment image sweb.env.x86_64.a18371b03f944585b4f08c:latest found for django__django-12262
Building instance image sweb.eval.x86_64.django__django-12262:latest for django__django-12262
2025-05-06 06:26:58,334 - INFO - Image sweb.eval.x86_64.django__django-12262:latest already exists, skipping build.
2025-05-06 06:26:58,334 - INFO - Creating container for django__django-12262...
2025-05-06 06:26:58,364 - INFO - Container for django__django-12262 created: 542f35945c3f832b39097c86f6c8674332da8ebb6ce8130e14b9958c446fc773
2025-05-06 06:26:58,686 - INFO - Container for django__django-12262 started: 542f35945c3f832b39097c86f6c8674332da8ebb6ce8130e14b9958c446fc773
2025-05-06 06:26:58,687 - INFO - Intermediate patch for django__django-12262 written to logs/run_evaluation/20250506_061805/SWE-Fixer/django__django-12262/patch.diff, now applying to container...
2025-05-06 06:26:58,919 - INFO - Failed to apply patch to container, trying again...
2025-05-06 06:26:58,979 - INFO - >>>>> Applied Patch:
patching file django/template/library.py
patching file django/template/library.py
Hunk #1 succeeded at 279 (offset 1 line).

2025-05-06 06:26:59,590 - INFO - Git diff before:
diff --git a/django/template/library.py b/django/template/library.py
index 20bc86dac8..84881f731b 100644
--- a/django/template/library.py
+++ b/django/template/library.py
@@ -251,7 +251,7 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,
     args = []
     kwargs = {}
     unhandled_params = list(params)
-    unhandled_kwargs = [
+    unhandled_kwonly_args = [
         kwarg for kwarg in kwonly
         if not kwonly_defaults or kwarg not in kwonly_defaults
     ]
@@ -261,10 +261,11 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,
         if kwarg:
             # The kwarg was successfully extracted
             param, value = kwarg.popitem()
-            if param not in params and param not in unhandled_kwargs and varkw is None:
+            if param not in params and param not in kwonly and varkw is None:
                 # An unexpected keyword argument was supplied
                 raise TemplateSyntaxError(
                     "'%s' received unexpected keyword argument '%s'" %
+
                     (name, param))
             elif param in kwargs:
                 # The keyword argument has already been supplied once
@@ -278,12 +279,13 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,
                     # If using the keyword syntax for a positional arg, then
                     # consume it.
                     unhandled_params.remove(param)
-                elif param in unhandled_kwargs:
+                elif param in unhandled_kwonly_args:
                     # Same for keyword-only arguments
-                    unhandled_kwargs.remove(param)
+                    unhandled_kwonly_args.remove(param)
         else:
             if kwargs:
                 raise TemplateSyntaxError(
+
                     "'%s' received some positional argument(s) after some "
                     "keyword argument(s)" % name)
             else:
2025-05-06 06:26:59,590 - INFO - Eval script for django__django-12262 written to logs/run_evaluation/20250506_061805/SWE-Fixer/django__django-12262/eval.sh; copying to container...
2025-05-06 06:27:06,383 - INFO - Test runtime: 6.61 seconds
2025-05-06 06:27:06,384 - INFO - Test output for django__django-12262 written to logs/run_evaluation/20250506_061805/SWE-Fixer/django__django-12262/test_output.txt
2025-05-06 06:27:06,462 - INFO - Git diff after:
diff --git a/django/template/library.py b/django/template/library.py
index 20bc86dac8..84881f731b 100644
--- a/django/template/library.py
+++ b/django/template/library.py
@@ -251,7 +251,7 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,
     args = []
     kwargs = {}
     unhandled_params = list(params)
-    unhandled_kwargs = [
+    unhandled_kwonly_args = [
         kwarg for kwarg in kwonly
         if not kwonly_defaults or kwarg not in kwonly_defaults
     ]
@@ -261,10 +261,11 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,
         if kwarg:
             # The kwarg was successfully extracted
             param, value = kwarg.popitem()
-            if param not in params and param not in unhandled_kwargs and varkw is None:
+            if param not in params and param not in kwonly and varkw is None:
                 # An unexpected keyword argument was supplied
                 raise TemplateSyntaxError(
                     "'%s' received unexpected keyword argument '%s'" %
+
                     (name, param))
             elif param in kwargs:
                 # The keyword argument has already been supplied once
@@ -278,12 +279,13 @@ def parse_bits(parser, bits, params, varargs, varkw, defaults,
                     # If using the keyword syntax for a positional arg, then
                     # consume it.
                     unhandled_params.remove(param)
-                elif param in unhandled_kwargs:
+                elif param in unhandled_kwonly_args:
                     # Same for keyword-only arguments
-                    unhandled_kwargs.remove(param)
+                    unhandled_kwonly_args.remove(param)
         else:
             if kwargs:
                 raise TemplateSyntaxError(
+
                     "'%s' received some positional argument(s) after some "
                     "keyword argument(s)" % name)
             else:
2025-05-06 06:27:06,462 - INFO - Grading answer for django__django-12262...
2025-05-06 06:27:06,470 - INFO - report: {'django__django-12262': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_inclusion_tag_errors (template_tests.test_custom.InclusionTagTests)', 'test_inclusion_tags (template_tests.test_custom.InclusionTagTests)', 'test_simple_tag_errors (template_tests.test_custom.SimpleTagTests)', 'test_simple_tags (template_tests.test_custom.SimpleTagTests)']}, 'PASS_TO_PASS': {'success': ['test_decorated_filter (template_tests.test_custom.CustomFilterTests)', 'test_filter (template_tests.test_custom.CustomFilterTests)', 'test_include_tag_missing_context (template_tests.test_custom.InclusionTagTests)', 'test_inclusion_tag_registration (template_tests.test_custom.InclusionTagTests)', 'test_simple_tag_missing_context (template_tests.test_custom.SimpleTagTests)', 'test_simple_tag_registration (template_tests.test_custom.SimpleTagTests)', 'test_load_annotated_function (template_tests.test_custom.TemplateTagLoadingTests)', 'test_load_error (template_tests.test_custom.TemplateTagLoadingTests)', 'test_load_error_egg (template_tests.test_custom.TemplateTagLoadingTests)', 'test_load_working_egg (template_tests.test_custom.TemplateTagLoadingTests)'], 'failure': ['test_15070_use_l10n (template_tests.test_custom.InclusionTagTests)', 'test_inclusion_tags_from_template (template_tests.test_custom.InclusionTagTests)', 'test_no_render_side_effect (template_tests.test_custom.InclusionTagTests)', 'test_render_context_is_cleared (template_tests.test_custom.InclusionTagTests)', 'test_simple_tag_escaping_autoescape_off (template_tests.test_custom.SimpleTagTests)', 'test_simple_tag_explicit_escaping (template_tests.test_custom.SimpleTagTests)', 'test_simple_tag_format_html_escaping (template_tests.test_custom.SimpleTagTests)', 'test_simple_tag_naive_escaping (template_tests.test_custom.SimpleTagTests)']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-12262: resolved: False
2025-05-06 06:27:06,471 - INFO - Attempting to stop container sweb.eval.django__django-12262.20250506_061805...
2025-05-06 06:27:21,941 - INFO - Attempting to remove container sweb.eval.django__django-12262.20250506_061805...
2025-05-06 06:27:21,979 - INFO - Container sweb.eval.django__django-12262.20250506_061805 removed.
