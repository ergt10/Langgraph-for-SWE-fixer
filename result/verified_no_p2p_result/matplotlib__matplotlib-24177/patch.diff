
diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py
index 36d6e8e..f016ac7 100644
--- a/lib/matplotlib/axes/_axes.py
+++ b/lib/matplotlib/axes/_axes.py
@@ -6750,9 +6750,13 @@ such objects
             tops.append(m)
         tops = np.array(tops, float)  # causes problems later if it's an int
         bins = np.array(bins, float)  # causes problems if float16
+        if density:
+            # normalize so the area of all the histograms together is 1
+            tops /= np.diff(bins) * tops.sum(axis=0)
         if stacked:
             tops = tops.cumsum(axis=0)
             # If a stacked density plot, normalize so the area of all the
+
             # stacked histograms together is 1
             if density:
                 tops = (tops / np.diff(bins)) / tops[-1].sum()

diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py
index 36d6e8e..6a54318 100644
--- a/lib/matplotlib/axes/_axes.py
+++ b/lib/matplotlib/axes/_axes.py
@@ -6757,8 +6757,10 @@ such objects
             if density:
                 tops = (tops / np.diff(bins)) / tops[-1].sum()
         if cumulative:
+            # note: this is always after density normalization
             slc = slice(None)
             if isinstance(cumulative, Number) and cumulative < 0:
+
                 slc = slice(None, None, -1)
             if density:
                 tops = (tops * np.diff(bins))[:, slc].cumsum(axis=1)[:, slc]
