
diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py
index 70fd79d..3b4b026 100644
--- a/django/core/servers/basehttp.py
+++ b/django/core/servers/basehttp.py
@@ -112,10 +112,12 @@ class ThreadedWSGIServer(socketserver.ThreadingMixIn, WSGIServer):
 
 class ServerHandler(simple_server.ServerHandler):
     http_version = "1.1"
+    request_method = None
 
     def __init__(self, stdin, stdout, stderr, environ, **kwargs):
         """
         Use a LimitedStream so that unread request data will be ignored at
+
         the end of the request. WSGIRequest uses a LimitedStream but it
         shouldn't discard the data since the upstream servers usually do this.
         This fix applies only for testserver/runserver.

diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py
index 70fd79d..451d56d 100644
--- a/django/core/servers/basehttp.py
+++ b/django/core/servers/basehttp.py
@@ -147,10 +147,15 @@ class ServerHandler(simple_server.ServerHandler):
         self.get_stdin().read()
         super().close()
 
+    def write(self, data):
+        if self.request_method != "HEAD":
+            super().write(data)
+
 
 class WSGIRequestHandler(simple_server.WSGIRequestHandler):
     protocol_version = "HTTP/1.1"
 
+
     def address_string(self):
         # Short-circuit parent method to not call socket.getfqdn
         return self.client_address[0]

diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py
index 70fd79d..182617a 100644
--- a/django/core/servers/basehttp.py
+++ b/django/core/servers/basehttp.py
@@ -221,12 +221,17 @@ class WSGIRequestHandler(simple_server.WSGIRequestHandler):
             return
 
         handler = ServerHandler(
-            self.rfile, self.wfile, self.get_stderr(), self.get_environ()
+            self.rfile,
+            self.wfile,
+            self.get_stderr(),
+            self.get_environ(),
+            request_method=self.command,
         )
         handler.request_handler = self  # backpointer for logging & connection closing
         handler.run(self.server.get_app())
 
 
+
 def run(addr, port, wsgi_handler, ipv6=False, threading=False, server_cls=WSGIServer):
     server_address = (addr, port)
     if threading:
